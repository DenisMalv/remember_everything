{"version":3,"file":"static/js/278.ca9600a5.chunk.js","mappings":"wQAEeA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,+GAE2BC,EAAAA,EAAAA,IAAA,oGAF3B,uBAEYC,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,gCAOIC,QAAQC,IAAR,MAPJ,yFAWeC,EAAW,GAAXA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BC,GAA1B,8HAEQC,EAAS,CACbA,OAAQ,CACNC,QAAS,mCACTC,SAAS,QACTH,MAAOA,EACPI,KAAM,IAPZ,SAWyBT,EAAAA,EAAAA,IAXzB,6CAW+CM,GAX/C,uBAWUL,EAXV,EAWUA,KAXV,kBAYSA,GAZT,2EAeeS,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,8FAA0CC,EAA1C,+BAAiD,GAAjD,kBAE2BZ,EAAAA,EAAAA,IAAA,6CACiBW,GADjB,OAEnBC,EAAO,IAAMA,EAAO,GAFD,6DAF3B,uBAEYX,EAFZ,EAEYA,KAFZ,kBAOWA,GAPX,gCASIC,QAAQC,IAAR,MATJ,iF,sFCWA,UAlCe,WAAO,IAAD,EACXU,GAAWC,EAAAA,EAAAA,MACjB,GAA2BC,EAAAA,EAAAA,UAAS,MAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAmCF,EAAAA,EAAAA,WAAiB,OAARF,QAAQ,IAARA,GAAA,UAAAA,EAAUK,aAAV,eAAiBb,QAAS,IAAtE,eAAOc,EAAP,KAAkBC,EAAlB,KAYA,OAJAC,EAAAA,EAAAA,YAAU,WAAK,IAAD,GACF,OAARR,QAAQ,IAARA,GAAA,UAAAA,EAAUK,aAAV,eAAiBb,SAASD,EAAAA,EAAAA,IAAWS,EAASK,MAAMb,OAAOiB,MAAK,SAACrB,GAAD,OAAQgB,EAAUhB,EAAKsB,QAAvB,GACnE,GAAC,CAACV,EAASK,MAAMb,SAGd,4BACI,oCACA,kBAAMmB,OAAO,IAAIC,SAZR,SAACC,GACdA,EAAEC,kBACFvB,EAAAA,EAAAA,IAAWe,GAAYG,MAAK,SAACrB,GAAD,OAAQgB,EAAUhB,EAAKsB,QAAvB,GAC/B,EASO,WACI,kBAAOX,KAAK,OAAOgB,KAAK,GAAGC,GAAG,GAAGC,MAAOX,EAAYY,SAdhD,SAACL,GAAD,OAAKN,EAAcM,EAAEM,OAAOF,MAA5B,KAeJ,2CAGJ,wBAEGd,GAAUA,EAAOiB,KAAI,SAACC,GAAD,OAAM,eAAgBL,GAAIK,EAAGL,GAAvB,UACrB,SAAC,KAAD,CAAMM,GAAE,UAAKD,EAAGL,IAAMX,MAAO,CAACkB,KAAOvB,EAASwB,SAAUhC,MAAOc,GAA/D,SAA8Ee,EAAGI,SADnDJ,EAAGL,GAAlB,QAOnC,C","sources":["API/fetches.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function fetchTrandingMovies() {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=6dae1a863e182d2e5c972909bcd1e575&&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function fetchMovie(query) {\n  const SEARCH_URL = `https://api.themoviedb.org/3/search/movie?`;\n  const params = {\n    params: {\n      api_key: '6dae1a863e182d2e5c972909bcd1e575',\n      language: `en-US`,\n      query: query,\n      page: 1,\n    },\n  };\n\n  const { data } = await axios.get(SEARCH_URL, params);\n  return data;\n}\n\nasync function fetchMovieDetails(movieId, type = '') {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}${\n        type ? '/' + type : ''\n      }?api_key=6dae1a863e182d2e5c972909bcd1e575&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport { fetchTrandingMovies, fetchMovie, fetchMovieDetails };","\nimport { useEffect, useState } from \"react\";\nimport { fetchMovie } from \"API/fetches\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst Movies = () => {\n    const location = useLocation();\n    const [movies,setMovies] = useState(null)\n    const [inputValue,setInputValue] = useState(location?.state?.query || '')\n\n    const onInput = (e)=>setInputValue(e.target.value)\n    const onSubmit = (e)=>{\n        e.preventDefault();\n        fetchMovie(inputValue).then((data)=>setMovies(data.results))\n    }\n\n    useEffect(()=>{\n        location?.state?.query && fetchMovie(location.state.query).then((data)=>setMovies(data.results))\n    },[location.state.query])\n    \n    return (\n        <div>\n            <h2>Movies</h2>\n            <form action=\"#\" onSubmit={onSubmit}>\n                <input type=\"text\" name=\"\" id=\"\" value={inputValue} onChange={onInput}/>\n                <button>Search</button>\n            </form>\n\n            <ul >\n            {\n               movies && movies.map((el)=><li key={el.id} id={el.id}>\n                     <Link to={`${el.id}`} state={{from : location.pathname, query: inputValue }}>{el.title}</Link>\n                </li>)    \n            }\n            </ul>\n        </div>\n    )\n}\n\nexport default Movies"],"names":["fetchTrandingMovies","axios","data","console","log","fetchMovie","query","params","api_key","language","page","fetchMovieDetails","movieId","type","location","useLocation","useState","movies","setMovies","state","inputValue","setInputValue","useEffect","then","results","action","onSubmit","e","preventDefault","name","id","value","onChange","target","map","el","to","from","pathname","title"],"sourceRoot":""}