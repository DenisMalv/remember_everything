{"version":3,"file":"static/js/990.ec0794a0.chunk.js","mappings":"wQAEeA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,+GAE2BC,EAAAA,EAAAA,IAAA,oGAF3B,uBAEYC,EAFZ,EAEYA,KAFZ,kBAKWA,GALX,gCAOIC,QAAQC,IAAR,MAPJ,yFAWeC,EAAW,GAAXA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BC,GAA1B,8HAEQC,EAAS,CACbA,OAAQ,CACNC,QAAS,mCACTC,SAAS,QACTH,MAAOA,EACPI,KAAM,IAPZ,SAWyBT,EAAAA,EAAAA,IAXzB,6CAW+CM,GAX/C,uBAWUL,EAXV,EAWUA,KAXV,kBAYSA,GAZT,2EAeeS,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,8FAA0CC,EAA1C,+BAAiD,GAAjD,kBAE2BZ,EAAAA,EAAAA,IAAA,6CACiBW,GADjB,OAEnBC,EAAO,IAAMA,EAAO,GAFD,6DAF3B,uBAEYX,EAFZ,EAEYA,KAFZ,kBAOWA,GAPX,gCASIC,QAAQC,IAAR,MATJ,iF,8ECJA,UAnBc,WACV,IAAMG,GAASO,EAAAA,EAAAA,MACf,GAAmCC,EAAAA,EAAAA,UAAS,MAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACNP,EAAAA,EAAAA,IAAkBJ,EAAOK,QAAQ,WAAWO,MAAK,SAACjB,GAAD,OAAQe,EAAcf,EAAKkB,KAA3B,GACpD,GAAC,CAACb,EAAOK,WAGN,4BACI,mCACA,wBACKI,GAAcA,EAAWK,KAAI,SAACC,GAAD,OAAM,wBAAiBA,EAAGC,MAAXD,EAAGE,GAAlB,QAK7C,C","sources":["API/fetches.js","components/Casts/Casts.jsx"],"sourcesContent":["import axios from 'axios';\n\nasync function fetchTrandingMovies() {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=6dae1a863e182d2e5c972909bcd1e575&&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function fetchMovie(query) {\n  const SEARCH_URL = `https://api.themoviedb.org/3/search/movie?`;\n  const params = {\n    params: {\n      api_key: '6dae1a863e182d2e5c972909bcd1e575',\n      language: `en-US`,\n      query: query,\n      page: 1,\n    },\n  };\n\n  const { data } = await axios.get(SEARCH_URL, params);\n  return data;\n}\n\nasync function fetchMovieDetails(movieId, type = '') {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}${\n        type ? '/' + type : ''\n      }?api_key=6dae1a863e182d2e5c972909bcd1e575&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport { fetchTrandingMovies, fetchMovie, fetchMovieDetails };","\nimport { useEffect, useState } from \"react\";\nimport { fetchMovieDetails } from \"API/fetches\";\nimport { useParams } from \"react-router-dom\";\n\nconst Casts = () => {\n    const params = useParams()\n    const [movieCasts,setMovieCasts] = useState(null)\n\n    useEffect(()=>{\n        fetchMovieDetails(params.movieId,'credits').then((data)=>setMovieCasts(data.cast))\n    },[params.movieId])\n    \n    return (\n        <div>\n            <h2>Casts</h2>\n            <ul>\n                {movieCasts && movieCasts.map((el)=><li key={el.id}>{el.name}</li>)}\n            </ul>\n\n        </div>\n    )\n}\n\nexport default Casts"],"names":["fetchTrandingMovies","axios","data","console","log","fetchMovie","query","params","api_key","language","page","fetchMovieDetails","movieId","type","useParams","useState","movieCasts","setMovieCasts","useEffect","then","cast","map","el","name","id"],"sourceRoot":""}